name: Deploy
on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  DetectChanges:
    uses: ./.github/workflows/detect-changes.yml

  # Build-And-Push:
  #   runs-on: ubuntu-latest
  #   needs: DetectChanges
  #   strategy:
  #     matrix:
  #       service: ${{ fromJson(needs.DetectChanges.outputs.matrix) }}

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push image for ${{ matrix.service }}
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./${{ matrix.service }}
  #         file: ./${{ matrix.service }}/Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

  Deploy:
    needs:
      # - Build-And-Push
      - DetectChanges
    strategy:
      matrix:
        service: ${{ fromJson(needs.DetectChanges.outputs.matrix) }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Azure login
      #   uses: azure/login@v1.4.6
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create ENV file
        run: |
          SECRET_NAME="$(echo "${{ matrix.service }}" | tr '[:lower:]' '[:upper:]')_ENV"
          echo "SECRET_NAME=$SECRET_NAME" >> $GITHUB_ENV
          echo "SECRET_NAME: ${{ secrets['$SECRET_NAME'] }}"
          # echo "${{ secrets[env.SECRET_NAME] }}" > ./${{ matrix.service }}/.env
          # cat ./${{ matrix.service }}/.env

      # - name: Get AKS credentials
      #   run: |
      #     az aks get-credentials --resource-group RhythmFlow --name RhythmFlow --overwrite-existing

      # - name: Create Config Map
      #   run: |
      #     kubectl create configmap ${{ matrix.service }}-env-configmap --from-env-file=./${{ matrix.service }}/.env

      # - name: Deploy ${{ matrix.service }} to AKS
      #   run: |
      #     kubectl apply -f k8s/${{ matrix.service }}-deployment.yaml
      #     kubectl apply -f k8s/${{ matrix.service }}-service.yaml

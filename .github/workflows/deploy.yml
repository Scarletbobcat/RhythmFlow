name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  DetectChanges:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      gateway: ${{ steps.filter.outputs.gateway }}
      eureka: ${{ steps.filter.outputs.eureka }}
      users: ${{ steps.filter.outputs.users }}
      music: ${{ steps.filter.outputs.music }}
      search: ${{ steps.filter.outputs.search }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect folder changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            gateway:
              - 'gateway/**'
            eureka:
              - 'eureka/**'
            users:
              - 'users/**'
            music:
              - 'music/**'
            search:
              - 'search/**'
  Build-And-Push:
    runs-on: ubuntu-latest
    needs: DetectChanges
    strategy:
      matrix:
        service: [frontend, gateway, eureka, users, music, search]
        include:
          - service: frontend
            changed: ${{ needs.DetectChanges.outputs.frontend }}
          - service: gateway
            changed: ${{ needs.DetectChanges.outputs.gateway }}
          - service: eureka
            changed: ${{ needs.DetectChanges.outputs.eureka }}
          - service: users
            changed: ${{ needs.DetectChanges.outputs.users }}
          - service: music
            changed: ${{ needs.DetectChanges.outputs.music }}
          - service: search
            changed: ${{ needs.DetectChanges.outputs.search }}

    steps:
      - name: Exit if service has no changes
        if: matrix.changed != 'true'
        run: echo "No changes detected for ${{ matrix.service }}. Exiting." && exit 0

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image for ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

  Deploy:
    needs:
      - Build-And-Push
      - DetectChanges
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, gateway, eureka, users, music, search]
        include:
          - service: frontend
            changed: ${{ needs.DetectChanges.outputs.frontend }}
          - service: gateway
            changed: ${{ needs.DetectChanges.outputs.gateway }}
          - service: eureka
            changed: ${{ needs.DetectChanges.outputs.eureka }}
          - service: users
            changed: ${{ needs.DetectChanges.outputs.users }}
          - service: music
            changed: ${{ needs.DetectChanges.outputs.music }}
          - service: search
            changed: ${{ needs.DetectChanges.outputs.search }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Exit if service has no changes
        if: matrix.changed != 'true'
        run: echo "No changes detected for ${{ matrix.service }}. Exiting." && exit 0

      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group RhythmFlow --name RhythmFlow --overwrite-existing
      - name: Deploy ${{ matrix.service }} to AKS
        run: |
          kubectl apply -f k8s/${{ matrix.service }}-deployment.yaml \
          kubectl apply -f k8s/${{ matrix.service }}-service.yaml

name: Playwright E2E Tests

on:
  pull_request:
    branches: [dev]

jobs:
  DetectChanges:
    uses: ./.github/workflows/detect-changes.yml

  Build-And-Push:
    runs-on: ubuntu-latest
    if: ${{ needs.DetectChanges.outputs.matrix != '[]'}}
    needs: DetectChanges
    strategy:
      matrix:
        service: ${{ fromJson(needs.DetectChanges.outputs.matrix) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create ENV file for Frontend
        if: ${{ matrix.service == 'frontend' }}
        run: |
          echo "${{ secrets.FRONTEND_ENV }}" > ./${{ matrix.service }}/.env

      - name: Build and push image for ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

  e2e:
    runs-on: ubuntu-latest
    needs: Build-And-Push
    env:
      frontend-dir: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Create env files
        run: |
          echo "${{ secrets.USERS_ENV }}" > ./users/.env
          echo "${{ secrets.MUSIC_ENV }}" > ./music/.env
          echo "${{ secrets.GATEWAY_ENV }}" > ./gateway/.env
          echo "${{ secrets.SEARCH_ENV }}" > ./search/.env
          echo "${{ secrets.LOGGING_ENV }}" > ./logging/.env
          echo "${{ secrets.FRONTEND_ENV }}" > ./frontend/.env

      - name: Build and start services
        run: docker-compose up -d

      - name: Wait for services to be ready
        run: |
          npx wait-on http://localhost:8080 \
                       http://localhost:8081 \
                       http://localhost:9090 \
                       http://localhost:7070 \
                       http://localhost:6060 \
                       http://localhost:5173 \
                       http://localhost:8761 \
                       http://localhost:15672

      - name: Install pnpm
        working-directory: ./${{ env.frontend-dir}}
        run: npm install -g pnpm

      - name: Install dependencies with pnpm
        working-directory: ./${{ env.frontend-dir}}
        run: pnpm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: pnpm run test:e2e

      - name: Upload HTML report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

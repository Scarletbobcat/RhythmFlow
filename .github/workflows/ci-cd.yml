name: CI
on:
  push:
    branches: [master, main, dev]
  pull_request:
    branches: [master, main, dev]

jobs:
  Frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        working-directory: ./Frontend
        run: npm install

      - name: Build
        working-directory: ./Frontend
        run: npm run build

  Gateway:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Build
        working-directory: ./Gateway
        run: mvn clean package

      - name: Run tests
        working-directory: ./Gateway
        run: mvn test

  Eureka:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Build
        working-directory: ./EurekaServer
        run: mvn clean package

      - name: Run tests
        working-directory: ./EurekaServer
        run: mvn test

  Users:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Build
        working-directory: ./Users
        run: mvn clean package

      - name: Run tests
        working-directory: ./Users
        run: mvn test

  Music:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Build
        working-directory: ./Music
        run: mvn clean package

      - name: Run tests
        working-directory: ./Music
        run: mvn test

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        # uses: sonarsource/sonarcloud-github-action@v5
        working-directory: ./Music
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Scarletbobcat_RhythmFlow
